{"version":3,"file":"component---src-templates-post-js-d94c0900993700cd00ae.js","mappings":"4PAkBqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA6BhB,OA7BgBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACjBC,OAAA,WACI,OACI,kBAAC,KAAWC,KAAKC,MACf,6BAASC,UAAU,kBACjB,4BAAQA,UAAU,kCACf,IAAMF,KAAKC,MAAO,gCAAiC,OACpD,yBAAKC,UAAU,SAASC,OAAOC,EAAAA,EAAAA,IAAW,2BAA6BC,EAAAA,EAAAA,IAAW,IAAML,KAAKC,MAAO,gCAAiC,OAAS,QAE9I,yBAAKC,UAAU,YACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,YAAYI,SAAUC,GAAAA,CAAO,IAAMP,KAAKC,MAAO,+BAAgC,OAAOO,SAAS,mBAAoBD,GAAAA,CAAO,IAAMP,KAAKC,MAAO,+BAAgC,OAAOO,SAAS,eAE9M,wBAAIN,UAAU,cAAc,IAAMF,KAAKC,MAAO,gCAAiC,OAC9E,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,yBAAKC,UAAU,kBACZO,EAAAA,EAAAA,IAAY,IAAMT,KAAKC,MAAO,mCAAoC,UAKzE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,iBACZO,EAAAA,EAAAA,IAAY,IAAMT,KAAKC,MAAO,mBAAoB,YAMlE,EA7BgBH,CAAaY,IAAAA","sources":["webpack://bgoonzblog/./src/templates/post.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {toStyleObj, withPrefix, htmlToReact} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <article className=\"post post-full\">\n                <header className=\"post-header has-gradient outer\">\n                  {_.get(this.props, 'pageContext.frontmatter.image', null) && (\n                  <div className=\"bg-img\" style={toStyleObj('background-image: url(\\'' + withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null)) + '\\')')}/>\n                  )}\n                  <div className=\"inner-sm\">\n                    <div className=\"post-meta\">\n                      <time className=\"published\" dateTime={moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%B %d, %Y')}</time>\n                    </div>\n                    <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                  </div>\n                </header>\n                <div className=\"inner-md outer\">\n                  <div className=\"post-content\">\n                    {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                  </div>\n                </div>\n              </article>\n            </Layout>\n        );\n    }\n}\n"],"names":["Post","render","this","props","className","style","toStyleObj","withPrefix","dateTime","moment","strftime","htmlToReact","React"],"sourceRoot":""}