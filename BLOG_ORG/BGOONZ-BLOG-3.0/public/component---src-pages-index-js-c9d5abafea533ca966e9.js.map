{"version":3,"sources":["webpack:///./src/components/PostExcerpt/styles.js","webpack:///./src/components/PostExcerpt/index.js","webpack:///./src/views/PostList/styles.js","webpack:///./src/views/PostList/index.js","webpack:///./node_modules/@styled-icons/fa-solid/ArrowLeft/ArrowLeft.esm.js","webpack:///./node_modules/@styled-icons/fa-solid/ArrowRight/ArrowRight.esm.js","webpack:///./src/pages/index.js"],"names":["Post","styled","article","Cover","Img","attrs","fluid","src","as","PostExcerpt","post","noText","frontmatter","excerpt","timeToRead","title","slug","cover","to","img","PostMeta","dangerouslySetInnerHTML","__html","asRow","css","inBlog","mediaQueries","maxPhablet","minPhablet","PostGrid","Grid","props","PostList","posts","rest","minWidth","maxWidth","gap","map","key","ArrowLeft","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","ArrowRight","IndexPage","data","mdx","janosh","Title","split","str","toLowerCase","Scroll","direction","fixed","body","nodes","h1","maxPhone","minPhone","iconCss","H","children","query"],"mappings":"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","file":"component---src-pages-index-js-c9d5abafea533ca966e9.js","sourcesContent":["import Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const Post = styled.article`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  border-radius: 0.5em;\n  border: 1px solid var(--color-shadow);\n  box-shadow: 0 0 1em var(--color-shadow);\n  overflow: hidden;\n  > :not(:first-child) {\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n  > :last-child {\n    margin-bottom: 0.5em;\n  }\n`\n\nexport const Cover = styled(Img).attrs(\n  ({ fluid, src }) => !fluid && src && { as: `img` }\n)`\n  height: calc(10em + 4vh);\n  width: 100%;\n  object-fit: cover;\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport PostMeta from '../PostMeta'\nimport { Cover, Post } from './styles'\n\nexport default function PostExcerpt({ post, noText }) {\n  const { frontmatter, excerpt, timeToRead } = post\n  const { title, slug, cover } = frontmatter\n  return (\n    <Post>\n      <Link to={slug}>\n        <Cover {...cover} {...cover.img} />\n      </Link>\n      <h3 css=\"margin: 0.8em auto 0.5em;\">\n        <Link to={slug}>{title}</Link>\n      </h3>\n      <PostMeta {...{ ...frontmatter, timeToRead }} />\n      {!noText && <span dangerouslySetInnerHTML={{ __html: excerpt }} />}\n    </Post>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { Grid } from 'components/styles'\nimport { mediaQueries } from 'utils/mediaQueries'\n\nconst asRow = css`\n  grid-column: 2/-2;\n  grid-auto-flow: column;\n  overflow: scroll;\n  grid-auto-columns: 18em;\n  padding: 1em;\n`\n\nconst inBlog = css`\n  ${mediaQueries.maxPhablet} {\n    grid-column: 3;\n    justify-self: center;\n  }\n  ${mediaQueries.minPhablet} {\n    grid-column: 2/-3;\n  }\n`\n\nexport const PostGrid = styled(Grid)`\n  height: max-content;\n  ${props => props.asRow && asRow};\n  ${props => props.inBlog && inBlog};\n`\n","import React from 'react'\nimport PostExcerpt from 'components/PostExcerpt'\nimport { PostGrid } from './styles'\n\nexport default function PostList({ posts, noText, ...rest }) {\n  return (\n    <PostGrid minWidth=\"17em\" maxWidth=\"24em\" gap=\"1.5em\" {...rest}>\n      {posts.map(post => (\n        <PostExcerpt key={post.frontmatter.slug} post={post} noText={noText} />\n      ))}\n    </PostGrid>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowLeft = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 448 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"\n  }));\n});\nArrowLeft.displayName = 'ArrowLeft';\nexport var ArrowLeftDimensions = {\n  height: 512,\n  width: 448\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowRight = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 448 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"\n  }));\n});\nArrowRight.displayName = 'ArrowRight';\nexport var ArrowRightDimensions = {\n  height: 512,\n  width: 448\n};","import PageTitle from 'components/PageTitle'\nimport Scroll from 'components/Scroll'\nimport { PageBody } from 'components/styles'\nimport { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowLeft, ArrowRight } from 'styled-icons/fa-solid'\nimport { mediaQueries } from 'utils/mediaQueries'\nimport PostList from 'views/PostList'\nimport { ProjectList } from 'views/Web'\n\nexport default function IndexPage({ data }) {\n  const { mdx, janosh, posts } = data\n  return (\n    <>\n      <PageTitle {...mdx.frontmatter.cover} css=\"min-height: 35em\">\n        <Title>\n          {mdx.frontmatter.title.split(`, `).map(str => (\n            <Link key={str} to={`/` + str.toLowerCase()}>\n              {str}\n            </Link>\n          ))}\n        </Title>\n        <Scroll direction=\"down\" to={1} />\n      </PageTitle>\n      <PageBody>\n        <Img\n          fixed={janosh.img.fixed}\n          css=\"border-radius: 50%; justify-self: center;\"\n        />\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n        <H>Recent posts</H>\n        <PostList asRow noText posts={posts.nodes} />\n        <H>Recent projects</H>\n        <ProjectList asRow />\n      </PageBody>\n    </>\n  )\n}\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 4em;\n  padding: 0 !important;\n  display: grid;\n  a {\n    padding: 0.4em;\n    color: white;\n    ${mediaQueries.maxPhone} {\n      & + a {\n        border-top: 0.5px solid rgba(255, 255, 255, 0.9);\n      }\n    }\n  }\n  ${mediaQueries.minPhone} {\n    grid-template-columns: 1fr 1fr;\n    a {\n      :nth-child(2),\n      :nth-child(3) {\n        background: rgba(0, 0, 255, 0.2);\n      }\n    }\n  }\n`\n\nconst iconCss = css`\n  width: 0.6em;\n  vertical-align: 0;\n  margin: 0 0.4em;\n`\n\nconst H = ({ children, as }) => (\n  <h1 as={as} css=\"text-align: center;\">\n    <ArrowLeft css={iconCss} />\n    {children}\n    <ArrowRight css={iconCss} />\n  </h1>\n)\n\nexport const query = graphql`\n  {\n    mdx(fileAbsolutePath: { regex: \"/landing.md/\" }) {\n      frontmatter {\n        title\n        ...cover\n      }\n      body\n    }\n    janosh: file(name: { eq: \"janosh\" }) {\n      img: childImageSharp {\n        fixed(width: 175) {\n          ...GatsbyImageSharpFixed_withWebp\n        }\n      }\n    }\n    posts: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: 5\n    ) {\n      nodes {\n        ...page\n      }\n    }\n  }\n`\n"],"sourceRoot":""}