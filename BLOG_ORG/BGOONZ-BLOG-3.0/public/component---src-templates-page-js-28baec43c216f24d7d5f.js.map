{"version":3,"sources":["webpack:///./src/components/PageTitle/styles.js","webpack:///./src/components/PageTitle/index.js","webpack:///./src/templates/page.js"],"names":["PageTitleDiv","styled","hgroup","Img","Image","attrs","p","fluid","src","as","dataURI","PageTitle","props","children","img","source","caption","url","rest","showOnHoverParent","dangerouslySetInnerHTML","__html","href","PageTemplate","data","page","frontmatter","body","excerpt","title","cover","sharp","alt","query"],"mappings":"+MAGaA,EAAeC,IAAOC,OAAV,2EAAGD,CAAH,+VAyBZE,EAAMF,YAAOG,KAAOC,OAC/B,SAAAC,GAAC,OAAKA,EAAEC,OAASD,EAAEE,KAAO,CAAEC,GAAG,MAAQD,IAAKF,EAAEI,SAAWJ,EAAEE,QAD7C,kEAAGP,CAAH,sFCxBD,SAASU,EAAUC,GAAQ,IAChCC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,IAAKC,EAAkCH,EAAlCG,OAAQC,EAA0BJ,EAA1BI,QAASC,EAAiBL,EAAjBK,IAAQC,EADT,YACkBN,EADlB,6CAEvC,OACE,kBAACZ,EAAiBkB,EAChB,kBAACf,EAAQW,GACRD,GACCG,GAAWD,IACX,kBAAC,IAAD,CAASI,kBAAmBnB,GAC1B,0BAAMoB,wBAAyB,CAAEC,OAAQL,KACxCA,GAAWD,GAAX,MACAA,GACC,yCACU,uBAAGO,KAAML,GAAMF,Q,kCChBrC,kJAMe,SAASQ,EAAT,GAAiC,IAAD,YAARC,KACOC,KAApCC,EADqC,EACrCA,YAAaC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QACnBC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAIf,OAHAA,EAAMvB,MAAQuB,SAAd,UAAcA,EAAOhB,WAArB,iBAAc,EAAYiB,aAA1B,aAAc,EAAmBxB,MACjCuB,EAAMtB,IAAMsB,SAAZ,UAAYA,EAAOhB,WAAnB,aAAY,EAAYN,IACxBsB,EAAME,IAAMF,SAAZ,UAAYA,EAAOhB,WAAnB,aAAY,EAAYkB,IAEtB,oCACE,kBAAC,IAAD,CAAWlB,IAAKgB,GACd,4BAAKD,IAEND,GAEC,kBAAC,IAAD,KACE,kBAAC,cAAD,KAAMD,KAOT,IAAMM,EAAK","file":"component---src-templates-page-js-28baec43c216f24d7d5f.js","sourcesContent":["import Image from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const PageTitleDiv = styled.hgroup`\n  position: relative;\n  color: white;\n  /* Use flex instead of grid. Else Safari messes up vertical alignment of children. */\n  display: flex;\n  flex-direction: column;\n  place-content: center;\n  min-height: 20em;\n  flex: 1; /* for filling height between header and footer on 404 page */\n  font-size: calc(1em + 0.5vw);\n  text-align: center;\n  overflow: hidden;\n  /* prettier-ignore */\n  > :not(:first-child):not(svg):not(figcaption) {\n    place-self: center;\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 0.2em;\n    padding: 0.1em 0.4em;\n    margin: 1em;\n  }\n  a {\n    color: var(--color-lightLink);\n  }\n`\n\nexport const Img = styled(Image).attrs(\n  p => !p.fluid && p.src && { as: `img`, src: p.dataURI || p.src }\n)`\n  position: absolute !important;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n","import React from 'react'\nimport { Caption } from '../styles'\nimport { Img, PageTitleDiv } from './styles'\n\nexport default function PageTitle(props) {\n  const { children, img, source, caption, url, ...rest } = props\n  return (\n    <PageTitleDiv {...rest}>\n      <Img {...img} />\n      {children}\n      {(caption || source) && (\n        <Caption showOnHoverParent={PageTitleDiv}>\n          <span dangerouslySetInnerHTML={{ __html: caption }} />\n          {caption && source && ` | `}\n          {source && (\n            <span>\n              Source: <a href={url}>{source}</a>\n            </span>\n          )}\n        </Caption>\n      )}\n    </PageTitleDiv>\n  )\n}\n","import PageTitle from 'components/PageTitle'\nimport { PageBody } from 'components/styles'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer as Mdx } from 'gatsby-plugin-mdx'\nimport React from 'react'\n\nexport default function PageTemplate({ data }) {\n  const { frontmatter, body, excerpt } = data.page\n  const { title, cover } = frontmatter\n  cover.fluid = cover?.img?.sharp?.fluid\n  cover.src = cover?.img?.src\n  cover.alt = cover?.img?.alt\n  return (\n    <>\n      <PageTitle img={cover}>\n        <h1>{title}</h1>\n      </PageTitle>\n      {excerpt && ( // If excerpt is empty, so is body. Hence no need to render it.\n        // Testing excerpt because body is an MDX function (always truthy).\n        <PageBody>\n          <Mdx>{body}</Mdx>\n        </PageBody>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    page: mdx(frontmatter: { slug: { eq: $slug } }) {\n      ...page\n    }\n  }\n`\n"],"sourceRoot":""}