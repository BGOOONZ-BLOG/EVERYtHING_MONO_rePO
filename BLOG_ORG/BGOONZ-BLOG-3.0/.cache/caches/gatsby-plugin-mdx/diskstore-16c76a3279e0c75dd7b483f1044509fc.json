{"expireTime":9007200896510405000,"key":"gatsby-plugin-mdx-entire-payload-c7f2bc20cd3d145b307457ca32d58457-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Do you sometimes find yourself typing commit messages in a hurry, immediately pushing to GitHub and only noticing too late that you've made a bunch of typos? It's happened to me often enough that I decided my commit messages need a spellchecker.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":246,"offset":246},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":246,"offset":246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The good news is, ","position":{"start":{"line":4,"column":1,"offset":248},"end":{"line":4,"column":19,"offset":266},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":4,"column":19,"offset":266},"end":{"line":4,"column":24,"offset":271},"indent":[]}},{"type":"text","value":" has your back here. A ","position":{"start":{"line":4,"column":24,"offset":271},"end":{"line":4,"column":47,"offset":294},"indent":[]}},{"type":"inlineCode","value":"commit-msg","position":{"start":{"line":4,"column":47,"offset":294},"end":{"line":4,"column":59,"offset":306},"indent":[]}},{"type":"text","value":" hook makes this really easy. Hooks are simply shell scripts with a ","position":{"start":{"line":4,"column":59,"offset":306},"end":{"line":4,"column":127,"offset":374},"indent":[]}},{"type":"link","title":null,"url":"https://git-scm.com/docs/githooks","children":[{"type":"text","value":"name ","position":{"start":{"line":4,"column":128,"offset":375},"end":{"line":4,"column":133,"offset":380},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":4,"column":133,"offset":380},"end":{"line":4,"column":138,"offset":385},"indent":[]}},{"type":"text","value":" recognizes","position":{"start":{"line":4,"column":138,"offset":385},"end":{"line":4,"column":149,"offset":396},"indent":[]}}],"position":{"start":{"line":4,"column":127,"offset":374},"end":{"line":4,"column":185,"offset":432},"indent":[]}},{"type":"text","value":" and placed in a directory where ","position":{"start":{"line":4,"column":185,"offset":432},"end":{"line":4,"column":218,"offset":465},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":4,"column":218,"offset":465},"end":{"line":4,"column":223,"offset":470},"indent":[]}},{"type":"text","value":" is looking for hooks. According to the ","position":{"start":{"line":4,"column":223,"offset":470},"end":{"line":4,"column":263,"offset":510},"indent":[]}},{"type":"link","title":null,"url":"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks","children":[{"type":"inlineCode","value":"git","position":{"start":{"line":4,"column":264,"offset":511},"end":{"line":4,"column":269,"offset":516},"indent":[]}},{"type":"text","value":" docs","position":{"start":{"line":4,"column":269,"offset":516},"end":{"line":4,"column":274,"offset":521},"indent":[]}}],"position":{"start":{"line":4,"column":263,"offset":510},"end":{"line":4,"column":333,"offset":580},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":4,"column":333,"offset":580},"end":{"line":4,"column":334,"offset":581},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":248},"end":{"line":4,"column":334,"offset":581},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":6,"column":3,"offset":585},"end":{"line":6,"column":7,"offset":589},"indent":[]}},{"type":"inlineCode","value":"commit-msg","position":{"start":{"line":6,"column":7,"offset":589},"end":{"line":6,"column":19,"offset":601},"indent":[]}},{"type":"text","value":" hook takes one parameter, the path to a temporary file that contains the commit message written by the developer. If this script exits non-zero, ","position":{"start":{"line":6,"column":19,"offset":601},"end":{"line":6,"column":165,"offset":747},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":6,"column":165,"offset":747},"end":{"line":6,"column":170,"offset":752},"indent":[]}},{"type":"text","value":" aborts the commit process, so you can use it to validate your project state or commit message before allowing a commit to go through.","position":{"start":{"line":6,"column":170,"offset":752},"end":{"line":6,"column":304,"offset":886},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":585},"end":{"line":6,"column":304,"offset":886},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":583},"end":{"line":6,"column":304,"offset":886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These hooks can be","position":{"start":{"line":8,"column":1,"offset":888},"end":{"line":8,"column":19,"offset":906},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":888},"end":{"line":8,"column":19,"offset":906},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"local","position":{"start":{"line":10,"column":5,"offset":912},"end":{"line":10,"column":10,"offset":917},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":910},"end":{"line":10,"column":12,"offset":919},"indent":[]}},{"type":"text","value":" to a project in which case the default location is ","position":{"start":{"line":10,"column":12,"offset":919},"end":{"line":10,"column":64,"offset":971},"indent":[]}},{"type":"inlineCode","value":".git/hooks","position":{"start":{"line":10,"column":64,"offset":971},"end":{"line":10,"column":76,"offset":983},"indent":[]}},{"type":"text","value":" (take a look in there for a bunch of helpful example hooks). This can be changed via ","position":{"start":{"line":10,"column":76,"offset":983},"end":{"line":10,"column":162,"offset":1069},"indent":[]}},{"type":"inlineCode","value":"git config core.hooksPath path/to/hooks","position":{"start":{"line":10,"column":162,"offset":1069},"end":{"line":10,"column":203,"offset":1110},"indent":[]}},{"type":"text","value":". You'll probably want to use this if you want to commit the hooks themselves to version control.","position":{"start":{"line":10,"column":203,"offset":1110},"end":{"line":10,"column":300,"offset":1207},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":910},"end":{"line":10,"column":300,"offset":1207},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":908},"end":{"line":10,"column":300,"offset":1207},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"global","position":{"start":{"line":11,"column":5,"offset":1212},"end":{"line":11,"column":11,"offset":1218},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":1210},"end":{"line":11,"column":13,"offset":1220},"indent":[]}},{"type":"text","value":" in which case they trigger for commits in all repos on that machine.","position":{"start":{"line":11,"column":13,"offset":1220},"end":{"line":11,"column":82,"offset":1289},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":1210},"end":{"line":11,"column":82,"offset":1289},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":1208},"end":{"line":11,"column":82,"offset":1289},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":908},"end":{"line":11,"column":82,"offset":1289},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There's not a whole lot of official documentation on ","position":{"start":{"line":13,"column":1,"offset":1291},"end":{"line":13,"column":54,"offset":1344},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":13,"column":54,"offset":1344},"end":{"line":13,"column":59,"offset":1349},"indent":[]}},{"type":"text","value":" hooks, especially not on how to combine global and local hooks. All I could find is","position":{"start":{"line":13,"column":59,"offset":1349},"end":{"line":13,"column":143,"offset":1433},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":1291},"end":{"line":13,"column":143,"offset":1433},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://git-scm.com/docs/githooks","children":[{"type":"text","value":"a list of recognized hook names and their respective purpose","position":{"start":{"line":15,"column":4,"offset":1438},"end":{"line":15,"column":64,"offset":1498},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1437},"end":{"line":15,"column":100,"offset":1534},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1437},"end":{"line":15,"column":100,"offset":1534},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1435},"end":{"line":15,"column":100,"offset":1534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"a ","position":{"start":{"line":16,"column":3,"offset":1537},"end":{"line":16,"column":5,"offset":1539},"indent":[]}},{"type":"link","title":null,"url":"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks","children":[{"type":"text","value":"section in the ","position":{"start":{"line":16,"column":6,"offset":1540},"end":{"line":16,"column":21,"offset":1555},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":16,"column":21,"offset":1555},"end":{"line":16,"column":26,"offset":1560},"indent":[]}},{"type":"text","value":" book","position":{"start":{"line":16,"column":26,"offset":1560},"end":{"line":16,"column":31,"offset":1565},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":1539},"end":{"line":16,"column":90,"offset":1624},"indent":[]}},{"type":"text","value":" that reiterates some of that information.","position":{"start":{"line":16,"column":90,"offset":1624},"end":{"line":16,"column":132,"offset":1666},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":1537},"end":{"line":16,"column":132,"offset":1666},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1535},"end":{"line":16,"column":132,"offset":1666},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1435},"end":{"line":16,"column":132,"offset":1666},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"But after ","position":{"start":{"line":18,"column":1,"offset":1668},"end":{"line":18,"column":11,"offset":1678},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/pre-commit/pre-commit/issues/1198","children":[{"type":"text","value":"a little bit of personal experimentation","position":{"start":{"line":18,"column":12,"offset":1679},"end":{"line":18,"column":52,"offset":1719},"indent":[]}}],"position":{"start":{"line":18,"column":11,"offset":1678},"end":{"line":18,"column":107,"offset":1774},"indent":[]}},{"type":"text","value":", it turns out that as soon as you specify a global hook path and leave the default local hook directory as is (i.e. ","position":{"start":{"line":18,"column":107,"offset":1774},"end":{"line":18,"column":224,"offset":1891},"indent":[]}},{"type":"inlineCode","value":".git/hooks","position":{"start":{"line":18,"column":224,"offset":1891},"end":{"line":18,"column":236,"offset":1903},"indent":[]}},{"type":"text","value":"), the global hook directory shadows the local one. Only the global hooks will called if you installed any or nothing happens if there are none. If, on the other hand, you also specify a local hooks directory (it can even be the default location, i.e. ","position":{"start":{"line":18,"column":236,"offset":1903},"end":{"line":18,"column":488,"offset":2155},"indent":[]}},{"type":"inlineCode","value":"git config --local core.hooksPath .git/hooks","position":{"start":{"line":18,"column":488,"offset":2155},"end":{"line":18,"column":534,"offset":2201},"indent":[]}},{"type":"text","value":") the story is reversed. In that case, local hooks will shadow global ones. It seems ","position":{"start":{"line":18,"column":534,"offset":2201},"end":{"line":18,"column":619,"offset":2286},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":18,"column":619,"offset":2286},"end":{"line":18,"column":624,"offset":2291},"indent":[]}},{"type":"text","value":" left it to you to make sure the global/local hooks check for the existence of local/global hooks and ","position":{"start":{"line":18,"column":624,"offset":2291},"end":{"line":18,"column":726,"offset":2393},"indent":[]}},{"type":"link","title":null,"url":"https://stackoverflow.com/a/53722351","children":[{"type":"text","value":"run those themselves","position":{"start":{"line":18,"column":727,"offset":2394},"end":{"line":18,"column":747,"offset":2414},"indent":[]}}],"position":{"start":{"line":18,"column":726,"offset":2393},"end":{"line":18,"column":786,"offset":2453},"indent":[]}},{"type":"text","value":" if that's what you want...","position":{"start":{"line":18,"column":786,"offset":2453},"end":{"line":18,"column":813,"offset":2480},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1668},"end":{"line":18,"column":813,"offset":2480},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Anyways with all that cleared up and knowing the caveats, I'll be assuming in this guide that you want to setup that ","position":{"start":{"line":20,"column":1,"offset":2482},"end":{"line":20,"column":118,"offset":2599},"indent":[]}},{"type":"inlineCode","value":"commit-msg","position":{"start":{"line":20,"column":118,"offset":2599},"end":{"line":20,"column":130,"offset":2611},"indent":[]}},{"type":"text","value":" hook globally. In that case, first decide where your global ","position":{"start":{"line":20,"column":130,"offset":2611},"end":{"line":20,"column":191,"offset":2672},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":20,"column":191,"offset":2672},"end":{"line":20,"column":196,"offset":2677},"indent":[]}},{"type":"text","value":" hooks should live. To specify that, run ","position":{"start":{"line":20,"column":196,"offset":2677},"end":{"line":20,"column":237,"offset":2718},"indent":[]}},{"type":"inlineCode","value":"git config --global core.hooksPath path/to/globalHooks","position":{"start":{"line":20,"column":237,"offset":2718},"end":{"line":20,"column":293,"offset":2774},"indent":[]}},{"type":"text","value":". The path could be something like ","position":{"start":{"line":20,"column":293,"offset":2774},"end":{"line":20,"column":328,"offset":2809},"indent":[]}},{"type":"inlineCode","value":"~/gitHooks","position":{"start":{"line":20,"column":328,"offset":2809},"end":{"line":20,"column":340,"offset":2821},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":20,"column":340,"offset":2821},"end":{"line":20,"column":344,"offset":2825},"indent":[]}},{"type":"inlineCode","value":"~/dotfiles/gitHooks","position":{"start":{"line":20,"column":344,"offset":2825},"end":{"line":20,"column":365,"offset":2846},"indent":[]}},{"type":"text","value":". You can also specify multiple directories for your global hooks. Just separate each path by a space.","position":{"start":{"line":20,"column":365,"offset":2846},"end":{"line":20,"column":467,"offset":2948},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":2482},"end":{"line":20,"column":467,"offset":2948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Next, create a file named ","position":{"start":{"line":22,"column":1,"offset":2950},"end":{"line":22,"column":27,"offset":2976},"indent":[]}},{"type":"inlineCode","value":"commit-msg","position":{"start":{"line":22,"column":27,"offset":2976},"end":{"line":22,"column":39,"offset":2988},"indent":[]}},{"type":"text","value":" in your global hook directory:","position":{"start":{"line":22,"column":39,"offset":2988},"end":{"line":22,"column":70,"offset":3019},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":2950},"end":{"line":22,"column":70,"offset":3019},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"touch $(git config --global core.hooksPath)/commit-msg","position":{"start":{"line":24,"column":1,"offset":3021},"end":{"line":26,"column":4,"offset":3085},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and insert the following.","position":{"start":{"line":28,"column":1,"offset":3087},"end":{"line":28,"column":26,"offset":3112},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":3087},"end":{"line":28,"column":26,"offset":3112},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"#!/bin/sh\n\n# Adapted from https://reddit.com/r/bash/comments/49sflp/spellcheck_git_commit_hook.\nif ! command -v aspell &>/dev/null; then\n  printf \"%s\\n\" \"[commit-msg hook] Warning: 'aspell' not installed. Unable to spell check commit message.\"\nelse\n  commit_msg_file=\"$1\"\n  wordList=( $(grep -v \"^  \" \"$commit_msg_file\" | aspell list) )\nfi\n\nif (( \"${#wordList[@]}\" > 0 )); then\n  printf \"%s\\n\" \"[commit-msg hook] Possible spelling errors found in commit message:\" \"${wordList[@]}\"\nfi\n\n# Check if running inside a terminal where the user can be prompted to handle\n# possible spelling errors. See https://stackoverflow.com/a/911213.\nif [ -t 1 ]; then\n  # Adapted from https://stackoverflow.com/a/10015707.\n  exec < /dev/tty\n\n  while true; do\n    read -p \"[commit-msg hook] Proceed anyway? (y/n) \" yn\n    if [ \"$yn\" = \"\" ]; then\n      yn='y'\n    fi\n    case $yn in\n        [Yy] ) break;;\n        [Nn] ) exit 1;;\n        * ) echo \"Please answer y for yes or n for no.\";;\n    esac\n  done\nfi","position":{"start":{"line":30,"column":1,"offset":3114},"end":{"line":63,"column":4,"offset":4109},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Finally, make sure you have ","position":{"start":{"line":65,"column":1,"offset":4111},"end":{"line":65,"column":29,"offset":4139},"indent":[]}},{"type":"link","title":null,"url":"https://aspell.net","children":[{"type":"inlineCode","value":"aspell","position":{"start":{"line":65,"column":30,"offset":4140},"end":{"line":65,"column":38,"offset":4148},"indent":[]}}],"position":{"start":{"line":65,"column":29,"offset":4139},"end":{"line":65,"column":59,"offset":4169},"indent":[]}},{"type":"text","value":" (or a similar command line spellchecker) installed and in your path. With Homebrew on macOS, it's as simple ","position":{"start":{"line":65,"column":59,"offset":4169},"end":{"line":65,"column":168,"offset":4278},"indent":[]}},{"type":"inlineCode","value":"brew install aspell","position":{"start":{"line":65,"column":168,"offset":4278},"end":{"line":65,"column":189,"offset":4299},"indent":[]}},{"type":"text","value":". Similarly, on Linux: ","position":{"start":{"line":65,"column":189,"offset":4299},"end":{"line":65,"column":212,"offset":4322},"indent":[]}},{"type":"inlineCode","value":"apt-get install aspell","position":{"start":{"line":65,"column":212,"offset":4322},"end":{"line":65,"column":236,"offset":4346},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":65,"column":236,"offset":4346},"end":{"line":65,"column":237,"offset":4347},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":4111},"end":{"line":65,"column":237,"offset":4347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"That's it. Next time you type a commit message of questionable spelling, ","position":{"start":{"line":67,"column":1,"offset":4349},"end":{"line":67,"column":74,"offset":4422},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":67,"column":74,"offset":4422},"end":{"line":67,"column":79,"offset":4427},"indent":[]}},{"type":"text","value":" will provide you with a list of all potential typos and ask if you want to abort to modify the message or proceed anyway.","position":{"start":{"line":67,"column":79,"offset":4427},"end":{"line":67,"column":201,"offset":4549},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":4349},"end":{"line":67,"column":201,"offset":4549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note, however, that with the above script, this will only work if you're committing from terminal. If instead you're using a UI for version control, there most likely won't a way for ","position":{"start":{"line":69,"column":1,"offset":4551},"end":{"line":69,"column":184,"offset":4734},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":69,"column":184,"offset":4734},"end":{"line":69,"column":189,"offset":4739},"indent":[]}},{"type":"text","value":" to interact with the user directly. I asked ","position":{"start":{"line":69,"column":189,"offset":4739},"end":{"line":69,"column":234,"offset":4784},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/microsoft/vscode/issues/82512","children":[{"type":"text","value":"VS Code","position":{"start":{"line":69,"column":235,"offset":4785},"end":{"line":69,"column":242,"offset":4792},"indent":[]}}],"position":{"start":{"line":69,"column":234,"offset":4784},"end":{"line":69,"column":293,"offset":4843},"indent":[]}},{"type":"text","value":" if they might provide a way around this in the future but they declined.","position":{"start":{"line":69,"column":293,"offset":4843},"end":{"line":69,"column":366,"offset":4916},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":4551},"end":{"line":69,"column":366,"offset":4916},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Git Spellchecker\",\"slug\":\"/git-spellchecker\",\"date\":\"2019-10-14T00:00:00.000Z\",\"cover\":{\"img\":\"git-spellchecker.svg\"},\"tags\":[\"Tutorial\",\"Technology\"]}","position":{"start":{"line":72,"column":1,"offset":4919},"end":{"line":72,"column":190,"offset":5108},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":72,"column":190,"offset":5108}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git Spellchecker\",\n  \"slug\": \"/git-spellchecker\",\n  \"date\": \"2019-10-14T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"git-spellchecker.svg\"\n  },\n  \"tags\": [\"Tutorial\", \"Technology\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Do you sometimes find yourself typing commit messages in a hurry, immediately pushing to GitHub and only noticing too late that you\\u2019ve made a bunch of typos? It\\u2019s happened to me often enough that I decided my commit messages need a spellchecker.\"), mdx(\"p\", null, \"The good news is, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" has your back here. A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"commit-msg\"), \" hook makes this really easy. Hooks are simply shell scripts with a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://git-scm.com/docs/githooks\"\n  }), \"name \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"git\"), \" recognizes\"), \" and placed in a directory where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" is looking for hooks. According to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"git\"), \" docs\"), \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"commit-msg\"), \" hook takes one parameter, the path to a temporary file that contains the commit message written by the developer. If this script exits non-zero, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" aborts the commit process, so you can use it to validate your project state or commit message before allowing a commit to go through.\")), mdx(\"p\", null, \"These hooks can be\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"local\"), \" to a project in which case the default location is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".git/hooks\"), \" (take a look in there for a bunch of helpful example hooks). This can be changed via \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git config core.hooksPath path/to/hooks\"), \". You\\u2019ll probably want to use this if you want to commit the hooks themselves to version control.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"global\"), \" in which case they trigger for commits in all repos on that machine.\")), mdx(\"p\", null, \"There\\u2019s not a whole lot of official documentation on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" hooks, especially not on how to combine global and local hooks. All I could find is\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://git-scm.com/docs/githooks\"\n  }), \"a list of recognized hook names and their respective purpose\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\"\n  }), \"section in the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"git\"), \" book\"), \" that reiterates some of that information.\")), mdx(\"p\", null, \"But after \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/pre-commit/pre-commit/issues/1198\"\n  }), \"a little bit of personal experimentation\"), \", it turns out that as soon as you specify a global hook path and leave the default local hook directory as is (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".git/hooks\"), \"), the global hook directory shadows the local one. Only the global hooks will called if you installed any or nothing happens if there are none. If, on the other hand, you also specify a local hooks directory (it can even be the default location, i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git config --local core.hooksPath .git/hooks\"), \") the story is reversed. In that case, local hooks will shadow global ones. It seems \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" left it to you to make sure the global/local hooks check for the existence of local/global hooks and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/a/53722351\"\n  }), \"run those themselves\"), \" if that\\u2019s what you want\\u2026\"), mdx(\"p\", null, \"Anyways with all that cleared up and knowing the caveats, I\\u2019ll be assuming in this guide that you want to setup that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"commit-msg\"), \" hook globally. In that case, first decide where your global \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" hooks should live. To specify that, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git config --global core.hooksPath path/to/globalHooks\"), \". The path could be something like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/gitHooks\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/dotfiles/gitHooks\"), \". You can also specify multiple directories for your global hooks. Just separate each path by a space.\"), mdx(\"p\", null, \"Next, create a file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"commit-msg\"), \" in your global hook directory:\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"0\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"touch \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"$(git config --global core.hooksPath)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"/commit-msg\"))))), mdx(\"p\", null, \"and insert the following.\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"1\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"#!/bin/sh\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Adapted from https://reddit.com/r/bash/comments/49sflp/spellcheck_git_commit_hook.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ! \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"command\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" -v aspell &>/dev/null; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"printf\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"%s\\\\n\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"[commit-msg hook] Warning: 'aspell' not installed. Unable to spell check commit message.\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"else\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  commit_msg_file=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  wordList=( \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"$(grep -v \\\"^  \\\" \\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$commit_msg_file\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"|\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \" aspell list)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" )\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"(( \\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"${\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"#\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"wordList[@]}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \" ))\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"printf\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"%s\\\\n\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"[commit-msg hook] Possible spelling errors found in commit message:\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"${wordList[@]}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Check if running inside a terminal where the user can be prompted to handle\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# possible spelling errors. See https://stackoverflow.com/a/911213.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [ -t 1 ]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Adapted from https://stackoverflow.com/a/10015707.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"exec\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" < /dev/tty\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"while\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"true\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"do\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"read\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" -p \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"[commit-msg hook] Proceed anyway? (y/n) \\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" yn\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$yn\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      yn=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"'y'\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"case\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$yn\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"in\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"        [Yy] ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"break\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"        [Nn] ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"exit\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" 1;;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"        * ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"echo\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"Please answer y for yes or n for no.\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"esac\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"done\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))))), mdx(\"p\", null, \"Finally, make sure you have \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://aspell.net\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"aspell\")), \" (or a similar command line spellchecker) installed and in your path. With Homebrew on macOS, it\\u2019s as simple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"brew install aspell\"), \". Similarly, on Linux: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apt-get install aspell\"), \".\"), mdx(\"p\", null, \"That\\u2019s it. Next time you type a commit message of questionable spelling, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" will provide you with a list of all potential typos and ask if you want to abort to modify the message or proceed anyway.\"), mdx(\"p\", null, \"Note, however, that with the above script, this will only work if you\\u2019re committing from terminal. If instead you\\u2019re using a UI for version control, there most likely won\\u2019t a way for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" to interact with the user directly. I asked \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/microsoft/vscode/issues/82512\"\n  }), \"VS Code\"), \" if they might provide a way around this in the future but they declined.\"), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    position: relative;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n    line-height: 1.4;\\n  }\\n  \\n  .grvsc-code {\\n    display: table;\\n  }\\n  \\n  .grvsc-line {\\n    display: table-row;\\n    box-sizing: border-box;\\n    width: 100%;\\n    position: relative;\\n  }\\n  \\n  .grvsc-line > * {\\n    position: relative;\\n  }\\n  \\n  .grvsc-gutter-pad {\\n    display: table-cell;\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  .grvsc-gutter {\\n    display: table-cell;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter::before {\\n    content: attr(data-content);\\n  }\\n  \\n  .grvsc-source {\\n    display: table-cell;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-source:empty::after {\\n    content: ' ';\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter + .grvsc-source {\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  /* Line transformer styles */\\n  \\n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\\n    content: ' ';\\n    position: absolute;\\n    width: 100%;\\n  }\\n  \\n  .grvsc-line-diff-add::before {\\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\\n  }\\n  \\n  .grvsc-line-diff-del::before {\\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\\n  }\\n  \\n  .grvsc-line-number {\\n    padding: 0 2px;\\n    text-align: right;\\n    opacity: 0.7;\\n  }\\n  \\n  .default-dark {\\n    background-color: #1E1E1E;\\n    color: #D4D4D4;\\n  }\\n  .default-dark .mtk1 { color: #D4D4D4; }\\n  .default-dark .mtk8 { color: #CE9178; }\\n  .default-dark .mtk3 { color: #6A9955; }\\n  .default-dark .mtk15 { color: #C586C0; }\\n  .default-dark .mtk11 { color: #DCDCAA; }\\n  .default-dark .mtk12 { color: #9CDCFE; }\\n  .default-dark .mtk7 { color: #B5CEA8; }\\n  .default-dark .grvsc-line-highlighted::before {\\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\\n  }\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Git Spellchecker\",\n  \"slug\": \"/git-spellchecker\",\n  \"date\": \"2019-10-14T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"git-spellchecker.svg\"\n  },\n  \"tags\": [\"Tutorial\", \"Technology\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Do you sometimes find yourself typing commit messages in a hurry, immediately pushing to GitHub and only noticing too late that you’ve made a bunch of typos? It’s happened to me often enough that I decided my commit messages need a spellchecker.`}</p>\n    <p>{`The good news is, `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` has your back here. A `}<inlineCode parentName=\"p\">{`commit-msg`}</inlineCode>{` hook makes this really easy. Hooks are simply shell scripts with a `}<a parentName=\"p\" {...{\n        \"href\": \"https://git-scm.com/docs/githooks\"\n      }}>{`name `}<inlineCode parentName=\"a\">{`git`}</inlineCode>{` recognizes`}</a>{` and placed in a directory where `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` is looking for hooks. According to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\"\n      }}><inlineCode parentName=\"a\">{`git`}</inlineCode>{` docs`}</a>{`:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The `}<inlineCode parentName=\"p\">{`commit-msg`}</inlineCode>{` hook takes one parameter, the path to a temporary file that contains the commit message written by the developer. If this script exits non-zero, `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` aborts the commit process, so you can use it to validate your project state or commit message before allowing a commit to go through.`}</p>\n    </blockquote>\n    <p>{`These hooks can be`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`local`}</strong>{` to a project in which case the default location is `}<inlineCode parentName=\"li\">{`.git/hooks`}</inlineCode>{` (take a look in there for a bunch of helpful example hooks). This can be changed via `}<inlineCode parentName=\"li\">{`git config core.hooksPath path/to/hooks`}</inlineCode>{`. You’ll probably want to use this if you want to commit the hooks themselves to version control.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`global`}</strong>{` in which case they trigger for commits in all repos on that machine.`}</li>\n    </ul>\n    <p>{`There’s not a whole lot of official documentation on `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` hooks, especially not on how to combine global and local hooks. All I could find is`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://git-scm.com/docs/githooks\"\n        }}>{`a list of recognized hook names and their respective purpose`}</a></li>\n      <li parentName=\"ul\">{`a `}<a parentName=\"li\" {...{\n          \"href\": \"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\"\n        }}>{`section in the `}<inlineCode parentName=\"a\">{`git`}</inlineCode>{` book`}</a>{` that reiterates some of that information.`}</li>\n    </ul>\n    <p>{`But after `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/pre-commit/pre-commit/issues/1198\"\n      }}>{`a little bit of personal experimentation`}</a>{`, it turns out that as soon as you specify a global hook path and leave the default local hook directory as is (i.e. `}<inlineCode parentName=\"p\">{`.git/hooks`}</inlineCode>{`), the global hook directory shadows the local one. Only the global hooks will called if you installed any or nothing happens if there are none. If, on the other hand, you also specify a local hooks directory (it can even be the default location, i.e. `}<inlineCode parentName=\"p\">{`git config --local core.hooksPath .git/hooks`}</inlineCode>{`) the story is reversed. In that case, local hooks will shadow global ones. It seems `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` left it to you to make sure the global/local hooks check for the existence of local/global hooks and `}<a parentName=\"p\" {...{\n        \"href\": \"https://stackoverflow.com/a/53722351\"\n      }}>{`run those themselves`}</a>{` if that’s what you want…`}</p>\n    <p>{`Anyways with all that cleared up and knowing the caveats, I’ll be assuming in this guide that you want to setup that `}<inlineCode parentName=\"p\">{`commit-msg`}</inlineCode>{` hook globally. In that case, first decide where your global `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` hooks should live. To specify that, run `}<inlineCode parentName=\"p\">{`git config --global core.hooksPath path/to/globalHooks`}</inlineCode>{`. The path could be something like `}<inlineCode parentName=\"p\">{`~/gitHooks`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`~/dotfiles/gitHooks`}</inlineCode>{`. You can also specify multiple directories for your global hooks. Just separate each path by a space.`}</p>\n    <p>{`Next, create a file named `}<inlineCode parentName=\"p\">{`commit-msg`}</inlineCode>{` in your global hook directory:`}</p>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"0\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`touch `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`$(git config --global core.hooksPath)`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`/commit-msg`}</span></span></span></code></pre>\n    <p>{`and insert the following.`}</p>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"1\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`#!/bin/sh`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Adapted from https://reddit.com/r/bash/comments/49sflp/spellcheck_git_commit_hook.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ! `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`command`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` -v aspell &>/dev/null; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`printf`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"%s\\\\n\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"[commit-msg hook] Warning: 'aspell' not installed. Unable to spell check commit message.\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`else`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  commit_msg_file=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$1`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  wordList=( `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`$(grep -v \"^  \" \"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$commit_msg_file`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\" `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`|`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{` aspell list)`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` )`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`(( \"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`\\${`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`#`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`wordList[@]}`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\" `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`>`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk7\"\n            }}>{`0`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{` ))`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`printf`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"%s\\\\n\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"[commit-msg hook] Possible spelling errors found in commit message:\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`\\${wordList[@]}`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Check if running inside a terminal where the user can be prompted to handle`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# possible spelling errors. See https://stackoverflow.com/a/911213.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [ -t 1 ]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Adapted from https://stackoverflow.com/a/10015707.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`exec`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` < /dev/tty`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`while`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`true`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`do`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`read`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` -p `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"[commit-msg hook] Proceed anyway? (y/n) \"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` yn`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$yn`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` = `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      yn=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`'y'`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`case`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$yn`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`in`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`        [Yy] ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`break`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`        [Nn] ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`exit`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` 1;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`        * ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`echo`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"Please answer y for yes or n for no.\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`esac`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`done`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span></code></pre>\n    <p>{`Finally, make sure you have `}<a parentName=\"p\" {...{\n        \"href\": \"https://aspell.net\"\n      }}><inlineCode parentName=\"a\">{`aspell`}</inlineCode></a>{` (or a similar command line spellchecker) installed and in your path. With Homebrew on macOS, it’s as simple `}<inlineCode parentName=\"p\">{`brew install aspell`}</inlineCode>{`. Similarly, on Linux: `}<inlineCode parentName=\"p\">{`apt-get install aspell`}</inlineCode>{`.`}</p>\n    <p>{`That’s it. Next time you type a commit message of questionable spelling, `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` will provide you with a list of all potential typos and ask if you want to abort to modify the message or proceed anyway.`}</p>\n    <p>{`Note, however, that with the above script, this will only work if you’re committing from terminal. If instead you’re using a UI for version control, there most likely won’t a way for `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` to interact with the user directly. I asked `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/microsoft/vscode/issues/82512\"\n      }}>{`VS Code`}</a>{` if they might provide a way around this in the future but they declined.`}</p>\n\n    <style {...{\n      \"className\": \"grvsc-styles\"\n    }}>{`\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}