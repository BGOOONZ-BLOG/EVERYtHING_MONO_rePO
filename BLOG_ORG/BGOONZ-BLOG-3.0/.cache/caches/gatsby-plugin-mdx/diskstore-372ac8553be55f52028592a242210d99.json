{"expireTime":9007200896510460000,"key":"gatsby-plugin-mdx-entire-payload-fde377aae095308db3900fe1f02c2e30-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you're like me, you're tired of manually having to activate your ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":69,"offset":69},"indent":[]}},{"type":"inlineCode","value":"conda","position":{"start":{"line":2,"column":69,"offset":69},"end":{"line":2,"column":76,"offset":76},"indent":[]}},{"type":"text","value":" environment every time you switch between Python projects. Since you're reading this, you may even have started googling for a solution that automates this process. The following ","position":{"start":{"line":2,"column":76,"offset":76},"end":{"line":2,"column":256,"offset":256},"indent":[]}},{"type":"inlineCode","value":"zsh","position":{"start":{"line":2,"column":256,"offset":256},"end":{"line":2,"column":261,"offset":261},"indent":[]}},{"type":"text","value":" script aimed satisfies this objective and has served me well for the last few months now. It's a spin-off of Christine Doig's ","position":{"start":{"line":2,"column":261,"offset":261},"end":{"line":2,"column":388,"offset":388},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/chdoig/conda-auto-env","children":[{"type":"inlineCode","value":"conda-auto-env","position":{"start":{"line":2,"column":389,"offset":389},"end":{"line":2,"column":405,"offset":405},"indent":[]}}],"position":{"start":{"line":2,"column":388,"offset":388},"end":{"line":2,"column":448,"offset":448},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":448,"offset":448},"end":{"line":2,"column":449,"offset":449},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":449,"offset":449},"indent":[]}},{"type":"code","lang":"sh:title=conda_auto_env.sh","meta":null,"value":"#!/bin/zsh\n\n# Automatically activates conda environments when entering directories\n# containing a conda environment file. The file must be named one of\n#   - env(ironment).y(a)ml\n#   - requirements.y(a)ml\n\n# Deactivates env when exciting the directory. If the env doesn't exist yet,\n# offer to create it from file.\n\n# Installation: Copy chpwd() to .zshrc or save the whole script as a file and\n# source it in .zshrc, e.g. by placing it in /usr/local/bin or by symlinking\n# conda_auto_env there and then adding `source conda_auto_env`.\n\n# chpwd is a zsh hook called whenever the working directory changes.\n# (http://zsh.sourceforge.net/Doc/Release/Functions.html#Hook-Functions). When\n# using bash, use the environment variable `PROMPT_COMMAND` instead. This might\n# have performance implications since it runs on every prompt (even empty ones),\n# not just directory changes. Plus PROMPT_COMMAND makes it impossible to change\n# to a different conda env while you're in a directory with an env file since\n# bash will always auto-change back to that file's env.\nchpwd() {\n  # On Linux replace `find -E` with `f -regextype posix-extended`.\n  FILE=\"$(find -E . -maxdepth 1 -regex '.*(env(ironment)?|requirements)\\.ya?ml' -print -quit)\"\n  if [[ -e $FILE ]]; then\n    ENV=$(sed -n 's/name: //p' $FILE)\n    # Check if env is already active.\n    if [[ $CONDA_DEFAULT_ENV != $ENV ]]; then\n      conda activate $ENV\n      # If env activation is unsuccessful, prompt user whether to create conda env from file.\n      if [ $? -ne 0 ]; then\n        while true; do\n          # Read user reply into variable YorN.\n          read \"YorN?[conda_auto_env] Environment '$ENV' doesn't exist. Would you like to create it now? (y/n)\"$'\\n'\n          # $'\\n' for newline. https://unix.stackexchange.com/a/126316/315020\n          if [ \"$YorN\" = \"\" ]; then YorN='y'; fi # interpret enter as y\n          case $YorN in\n              [Yy] ) echo Proceeding...\n                conda env create -f $FILE\n                conda activate $ENV;;\n              [Nn] ) echo Exiting...; break;;\n              * ) echo \"Enter y for yes or n for no.\";;\n          esac\n        done\n      fi\n      CONDA_ENV_ROOT=\"$(pwd)\"\n    fi\n  # Deactivate env when exciting the env file's directory.\n  elif [[ $PATH = */envs/* ]]\\\n    && [[ $(pwd) != $CONDA_ENV_ROOT ]]\\\n    && [[ $(pwd) != $CONDA_ENV_ROOT/* ]]\n  then\n    CONDA_ENV_ROOT=\"\"\n    conda deactivate\n  fi\n}\n\n# Execute chpwd on shell init in case the shell launches in a conda env directory.\nchpwd","position":{"start":{"line":4,"column":1,"offset":451},"end":{"line":64,"column":4,"offset":2987},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To install it, either copy it to ","position":{"start":{"line":66,"column":1,"offset":2989},"end":{"line":66,"column":34,"offset":3022},"indent":[]}},{"type":"inlineCode","value":".zshrc","position":{"start":{"line":66,"column":34,"offset":3022},"end":{"line":66,"column":42,"offset":3030},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":66,"column":42,"offset":3030},"end":{"line":66,"column":46,"offset":3034},"indent":[]}},{"type":"inlineCode","value":".zprofile","position":{"start":{"line":66,"column":46,"offset":3034},"end":{"line":66,"column":57,"offset":3045},"indent":[]}},{"type":"text","value":" or -- a little cleaner -- source this script in either of those files. For instance, say you have a ","position":{"start":{"line":66,"column":57,"offset":3045},"end":{"line":66,"column":158,"offset":3146},"indent":[]}},{"type":"inlineCode","value":"~/scripts","position":{"start":{"line":66,"column":158,"offset":3146},"end":{"line":66,"column":169,"offset":3157},"indent":[]}},{"type":"text","value":" directory where you keep custom scripts like this, simply run","position":{"start":{"line":66,"column":169,"offset":3157},"end":{"line":66,"column":231,"offset":3219},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2989},"end":{"line":66,"column":231,"offset":3219},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"ln -s \"~/scripts/conda_auto_env\" /usr/local/bin","position":{"start":{"line":68,"column":1,"offset":3221},"end":{"line":70,"column":4,"offset":3278},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"to add this script to your path. Then append the following line to your ","position":{"start":{"line":72,"column":1,"offset":3280},"end":{"line":72,"column":73,"offset":3352},"indent":[]}},{"type":"inlineCode","value":".zshrc","position":{"start":{"line":72,"column":73,"offset":3352},"end":{"line":72,"column":81,"offset":3360},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":72,"column":81,"offset":3360},"end":{"line":72,"column":82,"offset":3361},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3280},"end":{"line":72,"column":82,"offset":3361},"indent":[]}},{"type":"code","lang":"sh:title=.zshrc","meta":null,"value":"source conda_auto_env","position":{"start":{"line":74,"column":1,"offset":3363},"end":{"line":76,"column":4,"offset":3407},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"That's it. Now, every time you open a shell prompt \u001cin a directory that contains a ","position":{"start":{"line":78,"column":1,"offset":3409},"end":{"line":78,"column":84,"offset":3492},"indent":[]}},{"type":"inlineCode","value":"conda","position":{"start":{"line":78,"column":84,"offset":3492},"end":{"line":78,"column":91,"offset":3499},"indent":[]}},{"type":"text","value":" environment file named one of ","position":{"start":{"line":78,"column":91,"offset":3499},"end":{"line":78,"column":122,"offset":3530},"indent":[]}},{"type":"inlineCode","value":"[env(ironment).y(a)ml, requirements.y(a)ml]","position":{"start":{"line":78,"column":122,"offset":3530},"end":{"line":78,"column":167,"offset":3575},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":78,"column":167,"offset":3575},"end":{"line":78,"column":169,"offset":3577},"indent":[]}},{"type":"inlineCode","value":"conda_auto_env","position":{"start":{"line":78,"column":169,"offset":3577},"end":{"line":78,"column":185,"offset":3593},"indent":[]}},{"type":"text","value":" will automatically read the name of the corresponding environment from that file and activate it. Similarly, when you exit that directory, the environment will be deactivated. Lastly, if the environment doesn't exist yet when you first enter the directory, ","position":{"start":{"line":78,"column":185,"offset":3593},"end":{"line":78,"column":443,"offset":3851},"indent":[]}},{"type":"inlineCode","value":"conda_auto_env","position":{"start":{"line":78,"column":443,"offset":3851},"end":{"line":78,"column":459,"offset":3867},"indent":[]}},{"type":"text","value":" will offer to ","position":{"start":{"line":78,"column":459,"offset":3867},"end":{"line":78,"column":474,"offset":3882},"indent":[]}},{"type":"link","title":null,"url":"https://docs.conda.io/projects/conda/latest/commands/create.html","children":[{"type":"text","value":"create it from file","position":{"start":{"line":78,"column":475,"offset":3883},"end":{"line":78,"column":494,"offset":3902},"indent":[]}}],"position":{"start":{"line":78,"column":474,"offset":3882},"end":{"line":78,"column":561,"offset":3969},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":78,"column":561,"offset":3969},"end":{"line":78,"column":562,"offset":3970},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3409},"end":{"line":78,"column":562,"offset":3970},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Conda Auto Env\",\"slug\":\"/conda-auto-env\",\"date\":\"2019-04-23T00:00:00.000Z\",\"cover\":{\"img\":\"conda-python-robot.svg\",\"source\":\"Vecteezy\",\"url\":\"https://vecteezy.com/vector-art/192230-robot-character-design\"},\"tags\":[\"Tutorial\",\"Python\"]}","position":{"start":{"line":81,"column":1,"offset":3973},"end":{"line":81,"column":274,"offset":4246},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":81,"column":274,"offset":4246}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Conda Auto Env\",\n  \"slug\": \"/conda-auto-env\",\n  \"date\": \"2019-04-23T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"conda-python-robot.svg\",\n    \"source\": \"Vecteezy\",\n    \"url\": \"https://vecteezy.com/vector-art/192230-robot-character-design\"\n  },\n  \"tags\": [\"Tutorial\", \"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you\\u2019re like me, you\\u2019re tired of manually having to activate your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conda\"), \" environment every time you switch between Python projects. Since you\\u2019re reading this, you may even have started googling for a solution that automates this process. The following \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zsh\"), \" script aimed satisfies this objective and has served me well for the last few months now. It\\u2019s a spin-off of Christine Doig\\u2019s \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chdoig/conda-auto-env\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"conda-auto-env\")), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"conda_auto_env.sh\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"0\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"#!/bin/zsh\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Automatically activates conda environments when entering directories\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# containing a conda environment file. The file must be named one of\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"#   - env(ironment).y(a)ml\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"#   - requirements.y(a)ml\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Deactivates env when exciting the directory. If the env doesn't exist yet,\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# offer to create it from file.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Installation: Copy chpwd() to .zshrc or save the whole script as a file and\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# source it in .zshrc, e.g. by placing it in /usr/local/bin or by symlinking\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# conda_auto_env there and then adding `source conda_auto_env`.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# chpwd is a zsh hook called whenever the working directory changes.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# (http://zsh.sourceforge.net/Doc/Release/Functions.html#Hook-Functions). When\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# using bash, use the environment variable `PROMPT_COMMAND` instead. This might\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# have performance implications since it runs on every prompt (even empty ones),\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# not just directory changes. Plus PROMPT_COMMAND makes it impossible to change\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# to a different conda env while you're in a directory with an env file since\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# bash will always auto-change back to that file's env.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"chpwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"() {\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# On Linux replace `find -E` with `f -regextype posix-extended`.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  FILE=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"$(find -E \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \" -maxdepth 1 -regex '.*(env(ironment)?|requirements)\\\\.ya?ml' -print -quit)\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [[ -e \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$FILE\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ]]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    ENV=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"$(sed -n 's/name: //p' \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$FILE\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \")\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Check if env is already active.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [[ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$CONDA_DEFAULT_ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" != \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ]]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      conda activate \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$ENV\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# If env activation is unsuccessful, prompt user whether to create conda env from file.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$?\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" -ne 0 ]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"        \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"while\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"true\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"do\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Read user reply into variable YorN.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"read\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"YorN?[conda_auto_env] Environment '\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"' doesn't exist. Would you like to create it now? (y/n)\\\"$'\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk6\"\n  }), \"\\\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"'\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# $'\\\\n' for newline. https://unix.stackexchange.com/a/126316/315020\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$YorN\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ]; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" YorN=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"'y'\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# interpret enter as y\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"case\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$YorN\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"in\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"              [Yy] ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"echo\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" Proceeding...\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"                conda env create -f \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$FILE\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"                conda activate \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"              [Nn] ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"echo\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" Exiting...; \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"break\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"              * ) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"echo\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"Enter y for yes or n for no.\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";;\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"          \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"esac\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"        \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"done\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"      CONDA_ENV_ROOT=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"$(pwd)\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Deactivate env when exciting the env file's directory.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"elif\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" [[ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$PATH\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = */envs/* ]]\\\\\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    && [[ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"$(pwd)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" != \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$CONDA_ENV_ROOT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" ]]\\\\\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    && [[ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"$(pwd)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" != \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"$CONDA_ENV_ROOT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"/* ]]\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"then\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    CONDA_ENV_ROOT=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"\\\"\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    conda deactivate\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"fi\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# Execute chpwd on shell init in case the shell launches in a conda env directory.\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"chpwd\"))))), mdx(\"p\", null, \"To install it, either copy it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zshrc\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zprofile\"), \" or \\u2014 a little cleaner \\u2014 source this script in either of those files. For instance, say you have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/scripts\"), \" directory where you keep custom scripts like this, simply run\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"1\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"ln -s \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"\\\"~/scripts/conda_auto_env\\\"\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" /usr/local/bin\"))))), mdx(\"p\", null, \"to add this script to your path. Then append the following line to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zshrc\"), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \".zshrc\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"2\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"source\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" conda_auto_env\"))))), mdx(\"p\", null, \"That\\u2019s it. Now, every time you open a shell prompt \\x1Cin a directory that contains a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conda\"), \" environment file named one of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[env(ironment).y(a)ml, requirements.y(a)ml]\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conda_auto_env\"), \" will automatically read the name of the corresponding environment from that file and activate it. Similarly, when you exit that directory, the environment will be deactivated. Lastly, if the environment doesn\\u2019t exist yet when you first enter the directory, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conda_auto_env\"), \" will offer to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.conda.io/projects/conda/latest/commands/create.html\"\n  }), \"create it from file\"), \".\"), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    position: relative;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n    line-height: 1.4;\\n  }\\n  \\n  .grvsc-code {\\n    display: table;\\n  }\\n  \\n  .grvsc-line {\\n    display: table-row;\\n    box-sizing: border-box;\\n    width: 100%;\\n    position: relative;\\n  }\\n  \\n  .grvsc-line > * {\\n    position: relative;\\n  }\\n  \\n  .grvsc-gutter-pad {\\n    display: table-cell;\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  .grvsc-gutter {\\n    display: table-cell;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter::before {\\n    content: attr(data-content);\\n  }\\n  \\n  .grvsc-source {\\n    display: table-cell;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-source:empty::after {\\n    content: ' ';\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter + .grvsc-source {\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  /* Line transformer styles */\\n  \\n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\\n    content: ' ';\\n    position: absolute;\\n    width: 100%;\\n  }\\n  \\n  .grvsc-line-diff-add::before {\\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\\n  }\\n  \\n  .grvsc-line-diff-del::before {\\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\\n  }\\n  \\n  .grvsc-line-number {\\n    padding: 0 2px;\\n    text-align: right;\\n    opacity: 0.7;\\n  }\\n  \\n  .default-dark {\\n    background-color: #1E1E1E;\\n    color: #D4D4D4;\\n  }\\n  .default-dark .mtk3 { color: #6A9955; }\\n  .default-dark .mtk11 { color: #DCDCAA; }\\n  .default-dark .mtk1 { color: #D4D4D4; }\\n  .default-dark .mtk8 { color: #CE9178; }\\n  .default-dark .mtk15 { color: #C586C0; }\\n  .default-dark .mtk12 { color: #9CDCFE; }\\n  .default-dark .mtk6 { color: #D7BA7D; }\\n  .default-dark .grvsc-line-highlighted::before {\\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\\n  }\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Conda Auto Env\",\n  \"slug\": \"/conda-auto-env\",\n  \"date\": \"2019-04-23T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"conda-python-robot.svg\",\n    \"source\": \"Vecteezy\",\n    \"url\": \"https://vecteezy.com/vector-art/192230-robot-character-design\"\n  },\n  \"tags\": [\"Tutorial\", \"Python\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you’re like me, you’re tired of manually having to activate your `}<inlineCode parentName=\"p\">{`conda`}</inlineCode>{` environment every time you switch between Python projects. Since you’re reading this, you may even have started googling for a solution that automates this process. The following `}<inlineCode parentName=\"p\">{`zsh`}</inlineCode>{` script aimed satisfies this objective and has served me well for the last few months now. It’s a spin-off of Christine Doig’s `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/chdoig/conda-auto-env\"\n      }}><inlineCode parentName=\"a\">{`conda-auto-env`}</inlineCode></a>{`.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`conda_auto_env.sh`}</div>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"0\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`#!/bin/zsh`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Automatically activates conda environments when entering directories`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# containing a conda environment file. The file must be named one of`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`#   - env(ironment).y(a)ml`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`#   - requirements.y(a)ml`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Deactivates env when exciting the directory. If the env doesn't exist yet,`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# offer to create it from file.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Installation: Copy chpwd() to .zshrc or save the whole script as a file and`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# source it in .zshrc, e.g. by placing it in /usr/local/bin or by symlinking`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# conda_auto_env there and then adding \\`source conda_auto_env\\`.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# chpwd is a zsh hook called whenever the working directory changes.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# (http://zsh.sourceforge.net/Doc/Release/Functions.html#Hook-Functions). When`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# using bash, use the environment variable \\`PROMPT_COMMAND\\` instead. This might`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# have performance implications since it runs on every prompt (even empty ones),`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# not just directory changes. Plus PROMPT_COMMAND makes it impossible to change`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# to a different conda env while you're in a directory with an env file since`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# bash will always auto-change back to that file's env.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`chpwd`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`() {`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# On Linux replace \\`find -E\\` with \\`f -regextype posix-extended\\`.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  FILE=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"$(find -E `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{` -maxdepth 1 -regex '.*(env(ironment)?|requirements)\\\\.ya?ml' -print -quit)\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [[ -e `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$FILE`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ]]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    ENV=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`$(sed -n 's/name: //p' `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$FILE`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`)`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Check if env is already active.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [[ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$CONDA_DEFAULT_ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` != `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ]]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      conda activate `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$ENV`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# If env activation is unsuccessful, prompt user whether to create conda env from file.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$?`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` -ne 0 ]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`        `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`while`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`true`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`do`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Read user reply into variable YorN.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`read`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"YorN?[conda_auto_env] Environment '`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`' doesn't exist. Would you like to create it now? (y/n)\"$'`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk6\"\n            }}>{`\\\\n`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`'`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# $'\\\\n' for newline. https://unix.stackexchange.com/a/126316/315020`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$YorN`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` = `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ]; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` YorN=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`'y'`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# interpret enter as y`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`case`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$YorN`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`in`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`              [Yy] ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`echo`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` Proceeding...`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`                conda env create -f `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$FILE`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`                conda activate `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`              [Nn] ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`echo`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` Exiting...; `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`break`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`              * ) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`echo`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"Enter y for yes or n for no.\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`;;`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`          `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`esac`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`        `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`done`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`      CONDA_ENV_ROOT=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"$(pwd)\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Deactivate env when exciting the env file's directory.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`elif`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` [[ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$PATH`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` = */envs/* ]]\\\\`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    && [[ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`$(pwd)`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` != `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$CONDA_ENV_ROOT`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` ]]\\\\`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    && [[ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`$(pwd)`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` != `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`$CONDA_ENV_ROOT`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`/* ]]`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`then`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    CONDA_ENV_ROOT=`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"\"`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    conda deactivate`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`fi`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`}`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# Execute chpwd on shell init in case the shell launches in a conda env directory.`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`chpwd`}</span></span></span></code></pre>\n    <p>{`To install it, either copy it to `}<inlineCode parentName=\"p\">{`.zshrc`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.zprofile`}</inlineCode>{` or — a little cleaner — source this script in either of those files. For instance, say you have a `}<inlineCode parentName=\"p\">{`~/scripts`}</inlineCode>{` directory where you keep custom scripts like this, simply run`}</p>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"1\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`ln -s `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\"~/scripts/conda_auto_env\"`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` /usr/local/bin`}</span></span></span></code></pre>\n    <p>{`to add this script to your path. Then append the following line to your `}<inlineCode parentName=\"p\">{`.zshrc`}</inlineCode>{`.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`.zshrc`}</div>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"2\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`source`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` conda_auto_env`}</span></span></span></code></pre>\n    <p>{`That’s it. Now, every time you open a shell prompt \u001cin a directory that contains a `}<inlineCode parentName=\"p\">{`conda`}</inlineCode>{` environment file named one of `}<inlineCode parentName=\"p\">{`[env(ironment).y(a)ml, requirements.y(a)ml]`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`conda_auto_env`}</inlineCode>{` will automatically read the name of the corresponding environment from that file and activate it. Similarly, when you exit that directory, the environment will be deactivated. Lastly, if the environment doesn’t exist yet when you first enter the directory, `}<inlineCode parentName=\"p\">{`conda_auto_env`}</inlineCode>{` will offer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.conda.io/projects/conda/latest/commands/create.html\"\n      }}>{`create it from file`}</a>{`.`}</p>\n\n    <style {...{\n      \"className\": \"grvsc-styles\"\n    }}>{`\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk6 { color: #D7BA7D; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}