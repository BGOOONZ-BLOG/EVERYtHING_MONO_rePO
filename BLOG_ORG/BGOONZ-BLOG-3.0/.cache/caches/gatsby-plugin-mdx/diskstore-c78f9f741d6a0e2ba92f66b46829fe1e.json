{"expireTime":9007200896510464000,"key":"gatsby-plugin-mdx-entire-payload-3b2d39a060da3e7a3bcc99b602b593c8-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Kyle Mathews who created Gatsby ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":33,"offset":33},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/issues/25","children":[{"type":"text","value":"started a discussion","position":{"start":{"line":2,"column":34,"offset":34},"end":{"line":2,"column":54,"offset":54},"indent":[]}}],"position":{"start":{"line":2,"column":33,"offset":33},"end":{"line":2,"column":101,"offset":101},"indent":[]}},{"type":"text","value":" about how to exclude files during the build process for the production version of a site. You might want to do this if you have some blog posts lying around that are in a draft state and not ready for prime time yet. The question was asked way back in Sep 2015 but hasn't resulted in a canonical solution, unfortunately.","position":{"start":{"line":2,"column":101,"offset":101},"end":{"line":2,"column":422,"offset":422},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":422,"offset":422},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-364717023","children":[{"type":"text","value":"Alexander Bradley","position":{"start":{"line":4,"column":2,"offset":425},"end":{"line":4,"column":19,"offset":442},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":424},"end":{"line":4,"column":89,"offset":512},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":4,"column":89,"offset":512},"end":{"line":4,"column":94,"offset":517},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-379488775","children":[{"type":"text","value":"David Poindexter","position":{"start":{"line":4,"column":95,"offset":518},"end":{"line":4,"column":111,"offset":534},"indent":[]}}],"position":{"start":{"line":4,"column":94,"offset":517},"end":{"line":4,"column":181,"offset":604},"indent":[]}},{"type":"text","value":" both proposed solutions that filter posts with a frontmatter property ","position":{"start":{"line":4,"column":181,"offset":604},"end":{"line":4,"column":252,"offset":675},"indent":[]}},{"type":"inlineCode","value":"published","position":{"start":{"line":4,"column":252,"offset":675},"end":{"line":4,"column":263,"offset":686},"indent":[]}},{"type":"text","value":" (or that don't have a property ","position":{"start":{"line":4,"column":263,"offset":686},"end":{"line":4,"column":295,"offset":718},"indent":[]}},{"type":"inlineCode","value":"draft","position":{"start":{"line":4,"column":295,"offset":718},"end":{"line":4,"column":302,"offset":725},"indent":[]}},{"type":"text","value":", if you prefer) in ","position":{"start":{"line":4,"column":302,"offset":725},"end":{"line":4,"column":322,"offset":745},"indent":[]}},{"type":"inlineCode","value":"gatsby-node.js","position":{"start":{"line":4,"column":322,"offset":745},"end":{"line":4,"column":338,"offset":761},"indent":[]}},{"type":"text","value":". In my opinion, this comes with some downsides.","position":{"start":{"line":4,"column":338,"offset":761},"end":{"line":4,"column":386,"offset":809},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":424},"end":{"line":4,"column":386,"offset":809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When filtering out draft content for the production build, it's best to do so as close to the source as possible. There might be multiple places where draft content shows up on your site and if you don't do the filtering until you've reached ","position":{"start":{"line":6,"column":1,"offset":811},"end":{"line":6,"column":243,"offset":1053},"indent":[]}},{"type":"inlineCode","value":"gatsby-node","position":{"start":{"line":6,"column":243,"offset":1053},"end":{"line":6,"column":256,"offset":1066},"indent":[]}},{"type":"text","value":"'s page creation, you would have to implement the filtering in all of these places individually. For blog posts that might be your blog's index page and/or landing page that displays a list of most recent posts. This leads to verbosity and, if you forget a place, might leak your draft content.","position":{"start":{"line":6,"column":256,"offset":1066},"end":{"line":6,"column":550,"offset":1360},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":811},"end":{"line":6,"column":550,"offset":1360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the content is part of the site's repo, a solution that avoids these problems is to use ","position":{"start":{"line":8,"column":1,"offset":1362},"end":{"line":8,"column":92,"offset":1453},"indent":[]}},{"type":"inlineCode","value":"gatsby-source-filesystem","position":{"start":{"line":8,"column":92,"offset":1453},"end":{"line":8,"column":118,"offset":1479},"indent":[]}},{"type":"text","value":"'s ignore option. You could add a prefix such as draft- to all files containing draft content and combine that with","position":{"start":{"line":8,"column":118,"offset":1479},"end":{"line":8,"column":233,"offset":1594},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":1362},"end":{"line":8,"column":233,"offset":1594},"indent":[]}},{"type":"code","lang":"js:title=gatsby-config.js","meta":null,"value":"{\n  resolve: `gatsby-source-filesystem`,\n  options: {\n    path: `${__dirname}/content`,\n    ignore: process.env.NODE_ENV === `production` && [`**/draft-*`]\n  }\n}","position":{"start":{"line":10,"column":1,"offset":1596},"end":{"line":18,"column":4,"offset":1790},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then, once the content is ready to be published, simply remove the file's ","position":{"start":{"line":20,"column":1,"offset":1792},"end":{"line":20,"column":75,"offset":1866},"indent":[]}},{"type":"inlineCode","value":"draft-","position":{"start":{"line":20,"column":75,"offset":1866},"end":{"line":20,"column":83,"offset":1874},"indent":[]}},{"type":"text","value":" prefix and build.","position":{"start":{"line":20,"column":83,"offset":1874},"end":{"line":20,"column":101,"offset":1892},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1792},"end":{"line":20,"column":101,"offset":1892},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An advantage of this approach is that it works with both files and folders. If you want to exclude multiple files, simply add the prefix to the parent directory. For instance, you could have a permanent ","position":{"start":{"line":22,"column":1,"offset":1894},"end":{"line":22,"column":204,"offset":2097},"indent":[]}},{"type":"inlineCode","value":"drafts","position":{"start":{"line":22,"column":204,"offset":2097},"end":{"line":22,"column":212,"offset":2105},"indent":[]}},{"type":"text","value":" folder and move posts in and out of this folder as needed. In that case, you'd replace ","position":{"start":{"line":22,"column":212,"offset":2105},"end":{"line":22,"column":300,"offset":2193},"indent":[]}},{"type":"inlineCode","value":"[`**/draft-*`]","position":{"start":{"line":22,"column":300,"offset":2193},"end":{"line":22,"column":320,"offset":2213},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":22,"column":320,"offset":2213},"end":{"line":22,"column":326,"offset":2219},"indent":[]}},{"type":"inlineCode","value":"[`**/posts/drafts`]","position":{"start":{"line":22,"column":326,"offset":2219},"end":{"line":22,"column":351,"offset":2244},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1894},"end":{"line":22,"column":351,"offset":2244},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can then also prevent those files from cluttering up your ","position":{"start":{"line":24,"column":1,"offset":2246},"end":{"line":24,"column":63,"offset":2308},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":24,"column":63,"offset":2308},"end":{"line":24,"column":68,"offset":2313},"indent":[]}},{"type":"text","value":" tracker by adding this directory to your ","position":{"start":{"line":24,"column":68,"offset":2313},"end":{"line":24,"column":110,"offset":2355},"indent":[]}},{"type":"inlineCode","value":".gitignore","position":{"start":{"line":24,"column":110,"offset":2355},"end":{"line":24,"column":122,"offset":2367},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":24,"column":122,"offset":2367},"end":{"line":24,"column":123,"offset":2368},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2246},"end":{"line":24,"column":123,"offset":2368},"indent":[]}},{"type":"code","lang":"sh:title=.gitignore","meta":null,"value":"# draft posts\nposts/drafts","position":{"start":{"line":26,"column":1,"offset":2370},"end":{"line":29,"column":4,"offset":2423},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Other options?","position":{"start":{"line":31,"column":4,"offset":2428},"end":{"line":31,"column":18,"offset":2442},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":2425},"end":{"line":31,"column":18,"offset":2442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another cool solution would have been to completely delete the nodes corresponding to draft content right when Gatsby creates them. However, ","position":{"start":{"line":33,"column":1,"offset":2444},"end":{"line":33,"column":142,"offset":2585},"indent":[]}},{"type":"link","title":null,"url":"https://gatsbyjs.org/docs/actions/#deleteNode","children":[{"type":"inlineCode","value":"actions.deleteNode","position":{"start":{"line":33,"column":143,"offset":2586},"end":{"line":33,"column":163,"offset":2606},"indent":[]}}],"position":{"start":{"line":33,"column":142,"offset":2585},"end":{"line":33,"column":211,"offset":2654},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":33,"column":211,"offset":2654},"end":{"line":33,"column":212,"offset":2655},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/issues/10844#issuecomment-471375400","children":[{"type":"text","value":"doesn't seem to be supported","position":{"start":{"line":33,"column":213,"offset":2656},"end":{"line":33,"column":241,"offset":2684},"indent":[]}}],"position":{"start":{"line":33,"column":212,"offset":2655},"end":{"line":33,"column":314,"offset":2757},"indent":[]}},{"type":"text","value":" inside ","position":{"start":{"line":33,"column":314,"offset":2757},"end":{"line":33,"column":322,"offset":2765},"indent":[]}},{"type":"link","title":null,"url":"https://gatsbyjs.org/docs/node-apis/#onCreateNode","children":[{"type":"inlineCode","value":"exports.onCreateNode","position":{"start":{"line":33,"column":323,"offset":2766},"end":{"line":33,"column":345,"offset":2788},"indent":[]}}],"position":{"start":{"line":33,"column":322,"offset":2765},"end":{"line":33,"column":397,"offset":2840},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":33,"column":397,"offset":2840},"end":{"line":33,"column":398,"offset":2841},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2444},"end":{"line":33,"column":398,"offset":2841},"indent":[]}},{"type":"code","lang":"js:title=gatsby-node.js","meta":null,"value":"exports.onCreateNode = ({ node, actions }) => {\n  if (\n    process.env.NODE_ENV === `production` &&\n    node.frontmatter &&\n    node.frontmatter.draft\n  )\n    actions.deleteNode({ node })\n}","position":{"start":{"line":35,"column":1,"offset":2843},"end":{"line":44,"column":4,"offset":3063},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Exclude drafts from production in Gatsby\",\"slug\":\"/exclude-drafts-from-production\",\"date\":\"2019-03-19T00:00:00.000Z\",\"cover\":{\"img\":\"draft-content.svg\",\"source\":\"Vecteezy\",\"url\":\"https://vecteezy.com/vector-art/116659-free-flat-website-template-vector-background\"},\"tags\":[\"Web Dev\",\"Tutorial\",\"JS\"]}","position":{"start":{"line":47,"column":1,"offset":3066},"end":{"line":47,"column":339,"offset":3404},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":47,"column":339,"offset":3404}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Exclude drafts from production in Gatsby\",\n  \"slug\": \"/exclude-drafts-from-production\",\n  \"date\": \"2019-03-19T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"draft-content.svg\",\n    \"source\": \"Vecteezy\",\n    \"url\": \"https://vecteezy.com/vector-art/116659-free-flat-website-template-vector-background\"\n  },\n  \"tags\": [\"Web Dev\", \"Tutorial\", \"JS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Kyle Mathews who created Gatsby \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25\"\n  }), \"started a discussion\"), \" about how to exclude files during the build process for the production version of a site. You might want to do this if you have some blog posts lying around that are in a draft state and not ready for prime time yet. The question was asked way back in Sep 2015 but hasn\\u2019t resulted in a canonical solution, unfortunately.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-364717023\"\n  }), \"Alexander Bradley\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-379488775\"\n  }), \"David Poindexter\"), \" both proposed solutions that filter posts with a frontmatter property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"published\"), \" (or that don\\u2019t have a property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"draft\"), \", if you prefer) in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \". In my opinion, this comes with some downsides.\"), mdx(\"p\", null, \"When filtering out draft content for the production build, it\\u2019s best to do so as close to the source as possible. There might be multiple places where draft content shows up on your site and if you don\\u2019t do the filtering until you\\u2019ve reached \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node\"), \"\\u2019s page creation, you would have to implement the filtering in all of these places individually. For blog posts that might be your blog\\u2019s index page and/or landing page that displays a list of most recent posts. This leads to verbosity and, if you forget a place, might leak your draft content.\"), mdx(\"p\", null, \"If the content is part of the site\\u2019s repo, a solution that avoids these problems is to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \"\\u2019s ignore option. You could add a prefix such as draft- to all files containing draft content and combine that with\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"gatsby-config.js\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"js\",\n    \"data-index\": \"0\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"{\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  resolve: \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"`gatsby-source-filesystem`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  options: {\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    path: \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"${\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"__dirname\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"/content`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \",\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    ignore: \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"process\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"env\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"NODE_ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" === \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"`production`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" && [\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"`**/draft-*`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"]\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  }\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\"))))), mdx(\"p\", null, \"Then, once the content is ready to be published, simply remove the file\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"draft-\"), \" prefix and build.\"), mdx(\"p\", null, \"An advantage of this approach is that it works with both files and folders. If you want to exclude multiple files, simply add the prefix to the parent directory. For instance, you could have a permanent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"drafts\"), \" folder and move posts in and out of this folder as needed. In that case, you\\u2019d replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[`**/draft-*`]\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[`**/posts/drafts`]\")), mdx(\"p\", null, \"You can then also prevent those files from cluttering up your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" tracker by adding this directory to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitignore\"), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \".gitignore\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"sh\",\n    \"data-index\": \"1\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"# draft posts\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"posts/drafts\"))))), mdx(\"h2\", {\n    \"id\": \"other-options\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#other-options\",\n    \"aria-label\": \"other options permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other options?\"), mdx(\"p\", null, \"Another cool solution would have been to completely delete the nodes corresponding to draft content right when Gatsby creates them. However, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gatsbyjs.org/docs/actions/#deleteNode\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"actions.deleteNode\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/10844#issuecomment-471375400\"\n  }), \"doesn\\u2019t seem to be supported\"), \" inside \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gatsbyjs.org/docs/node-apis/#onCreateNode\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"exports.onCreateNode\")), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title\"\n  }, \"gatsby-node.js\"), mdx(\"pre\", {\n    \"className\": \"grvsc-container default-dark\",\n    \"data-language\": \"js\",\n    \"data-index\": \"2\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"exports\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"onCreateNode\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = ({ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"node\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"actions\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" }) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"=>\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" {\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"if\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"process\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"env\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"NODE_ENV\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" === \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk8\"\n  }), \"`production`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" &&\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"node\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"frontmatter\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" &&\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"node\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"frontmatter\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"draft\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  )\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"actions\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"deleteNode\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"({ \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"node\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" })\"))), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"grvsc-source\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\"))))), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    position: relative;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n    line-height: 1.4;\\n  }\\n  \\n  .grvsc-code {\\n    display: table;\\n  }\\n  \\n  .grvsc-line {\\n    display: table-row;\\n    box-sizing: border-box;\\n    width: 100%;\\n    position: relative;\\n  }\\n  \\n  .grvsc-line > * {\\n    position: relative;\\n  }\\n  \\n  .grvsc-gutter-pad {\\n    display: table-cell;\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  .grvsc-gutter {\\n    display: table-cell;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter::before {\\n    content: attr(data-content);\\n  }\\n  \\n  .grvsc-source {\\n    display: table-cell;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-source:empty::after {\\n    content: ' ';\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter + .grvsc-source {\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  /* Line transformer styles */\\n  \\n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\\n    content: ' ';\\n    position: absolute;\\n    width: 100%;\\n  }\\n  \\n  .grvsc-line-diff-add::before {\\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\\n  }\\n  \\n  .grvsc-line-diff-del::before {\\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\\n  }\\n  \\n  .grvsc-line-number {\\n    padding: 0 2px;\\n    text-align: right;\\n    opacity: 0.7;\\n  }\\n  \\n  .default-dark {\\n    background-color: #1E1E1E;\\n    color: #D4D4D4;\\n  }\\n  .default-dark .mtk1 { color: #D4D4D4; }\\n  .default-dark .mtk8 { color: #CE9178; }\\n  .default-dark .mtk4 { color: #569CD6; }\\n  .default-dark .mtk12 { color: #9CDCFE; }\\n  .default-dark .mtk3 { color: #6A9955; }\\n  .default-dark .mtk10 { color: #4EC9B0; }\\n  .default-dark .mtk11 { color: #DCDCAA; }\\n  .default-dark .mtk15 { color: #C586C0; }\\n  .default-dark .grvsc-line-highlighted::before {\\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\\n  }\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Exclude drafts from production in Gatsby\",\n  \"slug\": \"/exclude-drafts-from-production\",\n  \"date\": \"2019-03-19T00:00:00.000Z\",\n  \"cover\": {\n    \"img\": \"draft-content.svg\",\n    \"source\": \"Vecteezy\",\n    \"url\": \"https://vecteezy.com/vector-art/116659-free-flat-website-template-vector-background\"\n  },\n  \"tags\": [\"Web Dev\", \"Tutorial\", \"JS\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Kyle Mathews who created Gatsby `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25\"\n      }}>{`started a discussion`}</a>{` about how to exclude files during the build process for the production version of a site. You might want to do this if you have some blog posts lying around that are in a draft state and not ready for prime time yet. The question was asked way back in Sep 2015 but hasn’t resulted in a canonical solution, unfortunately.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-364717023\"\n      }}>{`Alexander Bradley`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gatsbyjs/gatsby/issues/25#issuecomment-379488775\"\n      }}>{`David Poindexter`}</a>{` both proposed solutions that filter posts with a frontmatter property `}<inlineCode parentName=\"p\">{`published`}</inlineCode>{` (or that don’t have a property `}<inlineCode parentName=\"p\">{`draft`}</inlineCode>{`, if you prefer) in `}<inlineCode parentName=\"p\">{`gatsby-node.js`}</inlineCode>{`. In my opinion, this comes with some downsides.`}</p>\n    <p>{`When filtering out draft content for the production build, it’s best to do so as close to the source as possible. There might be multiple places where draft content shows up on your site and if you don’t do the filtering until you’ve reached `}<inlineCode parentName=\"p\">{`gatsby-node`}</inlineCode>{`’s page creation, you would have to implement the filtering in all of these places individually. For blog posts that might be your blog’s index page and/or landing page that displays a list of most recent posts. This leads to verbosity and, if you forget a place, might leak your draft content.`}</p>\n    <p>{`If the content is part of the site’s repo, a solution that avoids these problems is to use `}<inlineCode parentName=\"p\">{`gatsby-source-filesystem`}</inlineCode>{`’s ignore option. You could add a prefix such as draft- to all files containing draft content and combine that with`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`gatsby-config.js`}</div>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"js\",\n      \"data-index\": \"0\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`{`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  resolve: `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\\`gatsby-source-filesystem\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`,`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  options: {`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    path: `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk4\"\n            }}>{`\\${`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`__dirname`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk4\"\n            }}>{`}`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`/content\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`,`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    ignore: `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`process`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`env`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`NODE_ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` === `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\\`production\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` && [`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\\`**/draft-*\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`]`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  }`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`}`}</span></span></span></code></pre>\n    <p>{`Then, once the content is ready to be published, simply remove the file’s `}<inlineCode parentName=\"p\">{`draft-`}</inlineCode>{` prefix and build.`}</p>\n    <p>{`An advantage of this approach is that it works with both files and folders. If you want to exclude multiple files, simply add the prefix to the parent directory. For instance, you could have a permanent `}<inlineCode parentName=\"p\">{`drafts`}</inlineCode>{` folder and move posts in and out of this folder as needed. In that case, you’d replace `}<inlineCode parentName=\"p\">{`[\\`**/draft-*\\`]`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`[\\`**/posts/drafts\\`]`}</inlineCode></p>\n    <p>{`You can then also prevent those files from cluttering up your `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` tracker by adding this directory to your `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`.gitignore`}</div>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"sh\",\n      \"data-index\": \"1\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk3\"\n            }}>{`# draft posts`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`posts/drafts`}</span></span></span></code></pre>\n    <h2 {...{\n      \"id\": \"other-options\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#other-options\",\n        \"aria-label\": \"other options permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Other options?`}</h2>\n    <p>{`Another cool solution would have been to completely delete the nodes corresponding to draft content right when Gatsby creates them. However, `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsbyjs.org/docs/actions/#deleteNode\"\n      }}><inlineCode parentName=\"a\">{`actions.deleteNode`}</inlineCode></a>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/gatsbyjs/gatsby/issues/10844#issuecomment-471375400\"\n      }}>{`doesn’t seem to be supported`}</a>{` inside `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsbyjs.org/docs/node-apis/#onCreateNode\"\n      }}><inlineCode parentName=\"a\">{`exports.onCreateNode`}</inlineCode></a>{`.`}</p>\n    <div {...{\n      \"className\": \"gatsby-code-title\"\n    }}>{`gatsby-node.js`}</div>\n    <pre {...{\n      \"className\": \"grvsc-container default-dark\",\n      \"data-language\": \"js\",\n      \"data-index\": \"2\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"grvsc-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk10\"\n            }}>{`exports`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`onCreateNode`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` = ({ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`node`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`, `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`actions`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` }) `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk4\"\n            }}>{`=>`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` {`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk15\"\n            }}>{`if`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` (`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`process`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`env`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`NODE_ENV`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` === `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk8\"\n            }}>{`\\`production\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` &&`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`node`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`frontmatter`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` &&`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`node`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`frontmatter`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`draft`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`  )`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`    `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`actions`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`.`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk11\"\n            }}>{`deleteNode`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`({ `}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk12\"\n            }}>{`node`}</span><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{` })`}</span></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"grvsc-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"grvsc-source\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"mtk1\"\n            }}>{`}`}</span></span></span></code></pre>\n\n    <style {...{\n      \"className\": \"grvsc-styles\"\n    }}>{`\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk8 { color: #CE9178; }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk3 { color: #6A9955; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}