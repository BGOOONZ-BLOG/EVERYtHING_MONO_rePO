{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Blog","render","display_posts","getPages","this","props","pageContext","pages","className","style","toStyleObj","withPrefix","post","post_idx","key","to","src","alt","dateTime","moment","strftime","rel","Fragment","React","Component"],"mappings":"2RAkBqBA,E,kGACjBC,OAAA,WAAU,IAAD,OACDC,EAAgB,IAAUC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,SAAU,mBAAoB,QACnG,OACI,kBAAC,IAAWH,KAAKC,MACb,4BAAQG,UAAU,kCACb,IAAMJ,KAAKC,MAAO,gCAAiC,OAChD,yBACIG,UAAU,SACVC,MAAOC,YAAW,0BAA4BC,YAAW,IAAMP,KAAKC,MAAO,gCAAiC,OAAS,QAG7H,yBAAKG,UAAU,YACX,wBAAIA,UAAU,cAAc,IAAMJ,KAAKC,MAAO,gCAAiC,OAC9E,IAAMD,KAAKC,MAAO,mCAAoC,OACnD,uBAAGG,UAAU,iBAAiB,IAAMJ,KAAKC,MAAO,mCAAoC,SAIhG,yBAAKG,UAAU,kBACX,yBAAKA,UAAU,aACV,IAAMN,GAAe,SAACU,EAAMC,GAAP,OAClB,6BAASC,IAAKD,EAAUL,UAAU,QAC7B,IAAMI,EAAM,0BAA2B,OACpC,kBAAC,IAAD,CAAMJ,UAAU,iBAAiBO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,QAC/D,yBACII,IAAKL,YAAW,IAAMC,EAAM,0BAA2B,OACvDK,IAAK,IAAM,EAAKZ,MAAO,0CAA2C,SAI9E,4BAAQG,UAAU,eACd,yBAAKA,UAAU,aACX,0BAAMA,UAAU,YAAYU,SAAUC,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,mBACxFD,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,eAGhE,wBAAIZ,UAAU,wBACV,kBAAC,IAAD,CAAMO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,OAAQS,IAAI,YAC/C,IAAMT,EAAM,oBAAqB,SAI7C,IAAMA,EAAM,sBAAuB,OAChC,kBAAC,IAAMU,SAAP,KACI,uBAAGd,UAAU,gBAAgB,IAAMI,EAAM,sBAAuB,QACM,IAArE,IAAM,EAAKP,MAAO,wCAAyC,OACxD,IAAM,EAAKA,MAAO,yCAA0C,OACxD,uBAAGG,UAAU,aACT,kBAAC,IAAD,CAAMA,UAAU,iBAAiBO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,QAC9D,IAAM,EAAKP,MAAO,yCAA0C,iB,GAlDnFkB,IAAMC","file":"component---src-templates-blog-js-36eb4fae1add87ca6010.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { graphql } from 'gatsby';\n\nimport { Layout } from '../components/index';\nimport { toStyleObj, withPrefix, getPages, Link } from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n    query ($url: String) {\n        sitePage(path: { eq: $url }) {\n            id\n        }\n    }\n`;\n\nexport default class Blog extends React.Component {\n    render() {\n        let display_posts = _.orderBy(getPages(this.props.pageContext.pages, '/blog'), 'frontmatter.date', 'desc');\n        return (\n            <Layout {...this.props}>\n                <header className=\"page-header has-gradient outer\">\n                    {_.get(this.props, 'pageContext.frontmatter.image', null) && (\n                        <div\n                            className=\"bg-img\"\n                            style={toStyleObj(\"background-image: url('\" + withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null)) + \"')\")}\n                        />\n                    )}\n                    <div className=\"inner-sm\">\n                        <h1 className=\"page-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                        {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                            <p className=\"page-subtitle\">{_.get(this.props, 'pageContext.frontmatter.subtitle', null)}</p>\n                        )}\n                    </div>\n                </header>\n                <div className=\"inner-md outer\">\n                    <div className=\"post-feed\">\n                        {_.map(display_posts, (post, post_idx) => (\n                            <article key={post_idx} className=\"post\">\n                                {_.get(post, 'frontmatter.thumb_image', null) && (\n                                    <Link className=\"post-thumbnail\" to={withPrefix(_.get(post, 'url', null))}>\n                                        <img\n                                            src={withPrefix(_.get(post, 'frontmatter.thumb_image', null))}\n                                            alt={_.get(this.props, 'pageContext.frontmatter.thumb_image_alt', null)}\n                                        />\n                                    </Link>\n                                )}\n                                <header className=\"post-header\">\n                                    <div className=\"post-meta\">\n                                        <time className=\"published\" dateTime={moment(_.get(post, 'frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>\n                                            {moment(_.get(post, 'frontmatter.date', null)).strftime('%B %d, %Y')}\n                                        </time>\n                                    </div>\n                                    <h2 className=\"post-title line-left\">\n                                        <Link to={withPrefix(_.get(post, 'url', null))} rel=\"bookmark\">\n                                            {_.get(post, 'frontmatter.title', null)}\n                                        </Link>\n                                    </h2>\n                                </header>\n                                {_.get(post, 'frontmatter.excerpt', null) && (\n                                    <React.Fragment>\n                                        <p className=\"post-excerpt\">{_.get(post, 'frontmatter.excerpt', null)}</p>\n                                        {_.get(this.props, 'pageContext.frontmatter.has_more_link', null) === true &&\n                                            _.get(this.props, 'pageContext.frontmatter.more_link_text', null) && (\n                                                <p className=\"read-more\">\n                                                    <Link className=\"read-more-link\" to={withPrefix(_.get(post, 'url', null))}>\n                                                        {_.get(this.props, 'pageContext.frontmatter.more_link_text', null)}\n                                                    </Link>\n                                                </p>\n                                            )}\n                                    </React.Fragment>\n                                )}\n                            </article>\n                        ))}\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}